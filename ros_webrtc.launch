<launch>
    <group ns="ros_webrtc">
        <!-- params -->
        <rosparam>
cameras:
  webcam:
    label: webcam
    publish: yes
#    rotation: 90
#    constraints:
#      optional:
#        maxWidth: "1280"
#        minWidth: "1280"
#        maxHeight: "720"
#        minHeight: "720"
peer_connection:
  constraints:
    optional:
#      googCpuOveruseDetection: "true"
#      googCpuUnderuseThreshold: "40"
#      googCpuOveruseThreshold: "60"
      googVeryHighBitrate: "true"
      DtlsSrtpKeyAgreement: "true"
ice_servers:
- uri: stun:stun.services.mozilla.com:3478
- uri: stun:stun.l.google.com:19302
trace:
  file: /tmp/ros_webrtc.trace
  filter: all
queue_sizes:
  audio: 1000
  video: 1000
  data: 1000
  event: 1000
flush_frequency: 60
open_media_sources: false
        </rosparam>
        <param name="cameras/webcam/name" value="$(optenv ROS_WEBRTC_WEBCAM id:///dev/video0)" type="str" />
        
        <!-- host -->
        <node name="host" pkg="ros_webrtc" type="ros_webrtc_host" output="screen" />
    </group>
    
    <group ns="ros_webrtc_example">
        <!-- example -->
        <node name="signaling" pkg="ros_webrtc" type="ros_webrtc_signaling" output="screen">
            <param name="host" type="string" value="0.0.0.0" />
            <param name="port" type="int" value="9000" />
        </node>
        <node name="example" pkg="ros_webrtc" type="ros_webrtc_example" output="screen">
            <param name="id" type="string" value="hostname" />
            <param name="signaling_url" type="string" value="ws://127.0.0.1:9000" />
            <param name="ros_webrtc_ns" type="string" value="/ros_webrtc" />
        </node>
    </group>
</launch>
